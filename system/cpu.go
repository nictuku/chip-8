package system

import (
	"fmt"
)

const (
	cpuFrequency     = 60 // 60ghz
	numRegisters     = 16
	ramCapacity      = 4096
	programAreaStart = 0x200
	screenWidth      = 64
	screenHeight     = 32
)

// Memory map.
// 0x000-0x1FF 		- interpreter
// 0x050 - 0x0A0 	- font set
type memory []byte

type stack struct {
	i []byte // 16 levels.
	c int
}

func newStack() stack {
	return stack{make([]byte, 16), 0}
}

func (s stack) push(x byte) error {
	if s.c >= 15 {
		return fmt.Errorf("stack over limit")
	}
	s.c++
	s.i[s.c] = x
	return nil
}

func (s stack) pop() (byte, error) {
	if s.c == 0 {
		return 0, fmt.Errorf("stack empty")
	}
	s.c--
	return s.i[s.c], nil
}

type key uint16 // 16 keys, one per bit.

var fontset = []byte{
	// Standard sprites for showing (some) text.
	0xf0, 0x90, 0x90, 0x90, 0xf0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xf0, 0x10, 0xf0, 0x80, 0xf0, // 2
	0xf0, 0x10, 0xf0, 0x10, 0xf0, // 3
	0x90, 0x90, 0xf0, 0x10, 0x10, // 4
	0xf0, 0x80, 0xf0, 0x10, 0xf0, // 5
	0xf0, 0x80, 0xf0, 0x90, 0xf0, // 6
	0xf0, 0x10, 0x20, 0x40, 0x40, // 7
	0xf0, 0x90, 0xf0, 0x90, 0xf0, // 8
	0xf0, 0x90, 0xf0, 0x10, 0xf0, // 9
	0xf0, 0x90, 0xf0, 0x90, 0x90, // A
	0xe0, 0x90, 0xe0, 0x90, 0xe0, // B
	0xf0, 0x80, 0x80, 0x80, 0xf0, // C
	0xe0, 0x90, 0x90, 0x90, 0xe0, // D
	0xf0, 0x80, 0xf0, 0x80, 0xf0, // E
	0xf0, 0x80, 0xf0, 0x80, 0x80, // F
}
